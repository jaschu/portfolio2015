// Utility mixins and variables

// Font size mixin:
.font-size(@sizeValue) {
  @remValue: @sizeValue / 16; // The constant here should be changed if the font-size on the html element is changed.
  @pxValue: (@sizeValue);
  font-size: ~"@{pxValue}px";
  font-size: ~"@{remValue}rem";
}
// cross-browser rgba mixin:
.rgba-background(@r,@g,@b,@a) {
  @rgba: rgba(@r,@g,@b,@a);
  @argb: argb(@rgba);
  @filter1: e("progid:DXImageTransform.Microsoft.gradient(startColorstr=");
  @filter2: e(",endColorstr=");
  @filter3: e(")");

  background-color: @rgba;
  // Requires modernizr checks for rgba:
  .no-rgba & {
    background: rgb(@r,@g,@b);
  }
  // Requires html5boilerplate-style conditional comments for browser-specific <html> tags:
  .lt-ie9 & {
    background: transparent;
    -ms-filter: "@{filter1}@{argb}@{filter2}@{argb}@{filter3}"; /* IE8 */
    filter: e("@{filter1}@{argb}@{filter2}@{argb}@{filter3}");   /* IE6 & 7 */
    zoom: 1;
  }
}

// Retina screen media query:
@retina: ~"only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min--moz-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2/1), only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx)";